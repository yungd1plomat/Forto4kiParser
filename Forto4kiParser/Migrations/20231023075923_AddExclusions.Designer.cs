// <auto-generated />
using System;
using Forto4kiParser.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Forto4kiParser.Migrations
{
    [DbContext(typeof(AppDb))]
    [Migration("20231023075923_AddExclusions")]
    partial class AddExclusions
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Forto4kiParser.Models.Filter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("AutoBuy")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("ChunkSize")
                        .HasColumnType("int");

                    b.Property<bool>("DistantWarehouses")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Exclusions")
                        .HasColumnType("longtext");

                    b.Property<int?>("Manufacturer")
                        .HasColumnType("int");

                    b.Property<int?>("MaxCount")
                        .HasColumnType("int");

                    b.Property<int?>("MinCount")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("NearbyWarehouses")
                        .HasColumnType("tinyint(1)");

                    b.Property<double?>("Profile")
                        .HasColumnType("double");

                    b.Property<int?>("Protection")
                        .HasColumnType("int");

                    b.Property<double?>("Radius")
                        .HasColumnType("double");

                    b.Property<string>("Sae")
                        .HasColumnType("longtext");

                    b.Property<int?>("Season")
                        .HasColumnType("int");

                    b.Property<double?>("Width")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.ToTable("Filters");
                });
#pragma warning restore 612, 618
        }
    }
}
